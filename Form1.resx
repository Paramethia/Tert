<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAHhwcACMgIwMYFhQ4FxQRlBYTENEWEw/tFxQQ9hcUEfcXFBH3FxQR9xcUEPcXFBD3FxQQ9xcU
        EfcXFBH3FxQR9xcUEfcXFBD3FxQR9xcUEPcXFBD3FxQR9xcUEfcXFBH2FhMP7RYTEM8WFBGQGRUTNyMg
        IQMfGxwAAAAAABoXFwAcGRkIFxQSchUTD+UVEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUS
        Dv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUS
        Dv8WEg/lFxQSdx0bGgoaGBcA3///ABcUEm4VEg/3FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUS
        Dv8TEA3/ExAN/xMQDf8VEg7/FRIO/xUSDv8TDw3/Ew8N/xMPDf8UEA3/FRIO/xUSDv8VEg7/FRIO/xUS
        Dv8VEg7/FRIO/xUSDv8VEg/5FxQSeS8tMAIaFxUvFhMP3hUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUS
        Dv8VEg7/FhQP/zVKIv9PdjH/OE8j/xcVD/8VEQ7/GRkR/zpRJf9AXCj/QF0o/zFDIP8VEg7/FRIO/xUS
        Dv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8WEg/mGRYUPRcUEYMVEg7+FRIO/xUSDv8VEg7/FRIO/xUS
        Dv8VEg7/FRIO/xQQDf8xQh//crFF/1uKN/9xr0X/Nksi/xMPDf8bHRL/THEw/3W2R/9sp0P/Plko/xUT
        D/8VEg7/FREO/xURDv8VEQ7/FRIO/xUSDv8VEg7/FRIO/xUSDv8WFBGVFhMRwxUSDv8VEg7/FRIO/xUT
        D/8WFQ//FxUP/xcVD/8VEw7/Ew8N/01yL/9djDn/FBIO/1aCNf9TfTT/FBAO/xQSDv8VEw7/YJE7/0lr
        L/8SDg3/FRIO/xUSDv8ZGBH/GRoR/xoaEf8YFxD/FRIO/xUSDv8VEg7/FRIO/xYUENEWExDiFRIO/xUS
        Dv8UEA3/LDkc/16POf9hlDv/X5I6/zFDH/8TDg3/VX80/1aBNf8SDg3/T3Uw/1eDNv8UEQ7/FREO/xQS
        Dv9gkTr/Smwv/xMPDf8VEQ7/GxwR/1eCNv9poUD/aaFA/0xwMP8WFA//FRIO/xUSDv8VEg7/FhMP7RYT
        EO0VEg7/FRIO/xQRDv8fIxX/P1on/3a4R/9Iai3/IScW/xMODf9Lby//XY45/xUTDv9Zhjb/UXky/xMP
        Df8cHxP/Kzod/2GUPP9KbC//Ew8N/xUSDv8XFQ//LTwd/2ifP/9fjzr/JzIZ/xUTDv8VEg7/FRIO/xUS
        Dv8WExD3FRMP8hUSDv8VEg7/FRIO/xQQDf8gJBT/bqpD/yw5HP8TDg3/FBAN/y09Hf9vq0T/WYg3/3Gw
        Rf8yRSD/Eg4N/yQsF/9nnj//fsRM/0lqLv8TDw3/FRIO/xUSDv8TEA3/XIo4/05zMP8SDQz/FRIO/xUS
        Dv8VEg7/FRIO/xQSDvsWEg/zFRIO/xUSDv8VEg7/FBAO/x8lFf9uqkP/LTsd/xQQDf8VEg7/FhMO/zNH
        IP9QeDL/Nksi/xYVD/8VEg7/FRIO/yQtF/9GZiz/Lj0e/xQQDv8VEg7/FRIO/xQSDv9biTj/T3Ux/xMP
        Df8VEg7/FRIO/xUSDv8VEg7/FBEO/RYTD/MVEg7/FRIO/xQQDf8xQyD/RmYr/3CuRP8tOx3/FBAN/xUS
        Dv8VEg7/Ew4N/xgYEP8nMRn/FxYQ/xUSDv8VEg7/FBAO/xMPDf8UEQ7/FRIO/xQRDf8jKxf/THEv/2mh
        QP9OdDD/Ew8N/xUSDv8VEg7/FRIO/xUSDv8UEQ7+FhMP8xUSDv8VEg7/FBAN/zFCH/9uq0P/e8FK/yw5
        HP8UEA3/FRIO/xQQDf8cHxL/VYE1/22nQv8fIxX/Ew8N/xMPDf8TDw3/Ew8N/xMPDf8UEQ7/FREO/x0g
        E/9UfjT/er9K/0xvL/8TDw3/FRIO/xUSDv8VEg7/FRIO/xQRDv4VEw/zFRIO/xUSDv8VEg7/FBEO/yMq
        Fv85UCT/HSAT/xURDv8UEQ7/HyQU/16OOv+Ez1D/c7NG/1N9NP9PdjL/TXIw/0tuLv9KbS7/RmYr/yIp
        Fv8UEQ7/FBEO/xYUD/8qNhv/IysX/xQRDv8VEg7/FRIO/xUSDv8VEg7/FBEO/hYTD/MVEg7/FRIO/xUS
        Dv8VEg7/Ew4N/xINDP8TDw3/FRIO/xQQDf8vPx7/fcJM/4TPUP+Byk7/gMhO/4DITv+AyE7/gMhO/4HJ
        T/9/xk3/OlIl/xMPDf8VEg7/FBAN/xINDf8TDg3/FREO/xUSDv8VEg7/FRIO/xUSDv8UEQ7+FhMP8xUS
        Dv8VEg7/FRIO/xcWEP87VCX/UHcx/y9AHv8VEg7/FRIO/xYUD/8+WCf/e79K/26qRP8zRiH/Lj0d/y4+
        Hf8tPBz/Lz8e/y48Hf8bHBH/FREO/xUSDv8tPR3/UXky/0JfKf8bHBL/FREO/xUSDv8VEg7/FRIO/xUR
        Dv4WEw/zFRIO/xUSDv8UEA3/O1Qm/3KxRv9gkzv/b6tE/ycxGf8UEA3/FRIO/xQRDv82SyL/WIQ2/xwg
        E/8SDQz/GhwR/zpQJP8dIRP/Eg0N/xURDv8UEQ3/IysX/26qQ/9djjn/b61E/0ZnLP8UEQ3/FRIO/xUS
        Dv8VEg7/FREO/hYTD/MVEg7/FRIO/xUTDv9cjTn/T3Yx/xgYEP9nnj//Ql8p/xMPDf8UEQ7/FRMO/xYU
        Dv8YGBD/GBYQ/xcWD/8lLxj/c7JG/2WZPv8lLhj/FBAO/xMPDf87UyX/bKdC/xocEf9EYyr/ZZw+/xgY
        EP8VEg7/FRIO/xUSDv8VEQ7+FhMP8xUSDv8VEg7/FxUP/2KWPP9FZSv/FBAO/2CTO/9KbC7/Eg0M/y4+
        Hf9ejjn/YpU7/2OWPP9lmj7/Zpw//2eeQP95vEr/hdBQ/26qQ/8qNhv/Eg0N/0FeKP9mnT7/FhUO/zhP
        I/9pokD/GhsR/xURDv8VEg7/FRIO/xQRDv4WEw/zFRIO/xUSDv8VEw7/XIw4/01zL/8XFhD/Zpw+/0Fe
        Kf8SDAz/O1Ml/3W1R/91tUj/dLRH/3SzRv9zskX/crFF/3vBS/+F0FD/er5K/zJFIP8RDAz/OE8j/2yn
        Qv8bHhL/QmAp/2SZPf8XFxD/FRIO/xUSDv8VEg7/FBEO/hYTD/MVEg7/FRIO/xQQDf87VCX/cK1E/16O
        Of9wrET/JzIa/xQQDf8XFg//HyQV/x8lFf8fJBT/HyMU/x4iE/8oNBr/cbBF/3OzRv80SCH/FRIO/xQQ
        Dv8gJhX/aaJA/2KWO/9wrUT/RWQr/xQQDv8VEg7/FRIO/xUSDv8UEQ7+FhMP8xUSDv8VEg7/FRIO/xcW
        EP85USP/T3Uw/zFCH/8VEg7/FRIO/xUSDv8UEQ7/FBEO/xQRDv8UEQ7/ExAO/x4iFP9Mby//Kjcb/xQQ
        Df8VEg7/FRIO/xQRDv8pNBr/THAv/0BbKP8aGxH/FREO/xUSDv8VEg7/FRIO/xQRDv4WEhDzFRIO/xUS
        Dv8VEg7/FREO/xINDP8SDAz/Eg4N/xUSDv8VEg7/FRIO/xMQDf8TDw3/FBAN/xUSDv8VEg7/FRIO/xMP
        Df8SDg3/Ew8N/xURDv8VEg7/FRIO/xMPDf8SDQz/Eg0M/xQRDv8VEg7/FRIO/xUSDv8VEg7/FBEO/hYS
        D/MVEg7/FRIO/xUSDv8XFw//OlEl/0xvL/8tOx3/FBEO/xUSDv8WFQ//OVAk/091MP81SCH/FhQP/xUS
        Dv8VEg7/MUIf/1F5Mv8/WSf/GRkR/xURDv8UEQ7/Kzkc/1B3Mf9BXin/GhsR/xURDv8VEg7/FRIO/xUS
        Dv8UEQ7+FRIP8RUSDv8VEg7/FBAN/ztTJf9ysUX/YpY8/2+rRP8nMBn/Ew4N/zdMIv9ysEb/XYw4/3Ox
        Rv8vQB7/Eg4N/ygyGf9wrET/XY45/3KwRv9AXCj/Ew4N/yEnFf9rpUH/YpY8/3CuRP9GZiz/FBEN/xUS
        Dv8VEg7/FRIO/xUSDvsWExDrFRIO/xUSDv8VEg7/W4o4/050MP8YGRD/aaFA/0JgKf8SDgz/VYE1/1WA
        Nf8VFA//YZU8/050MP8SDAz/QmAp/2WbPv8WFg//TXIw/2GTPP8UEQ7/OU4k/26pQ/8bHhL/RWQr/2ac
        P/8YFxD/FRIO/xUSDv8VEg7/FhMQ9xYTEOEVEg7/FRIO/xYVD/9hlDv/RGMq/xMQDv9hlDv/S24u/xMP
        Df9aijf/THAv/xIODf9Zhjb/VYA0/xINDP9Jaiz/Xo45/xMQDf9BXSn/Zpw+/xYUD/9AXCj/Z58//xcV
        D/86UST/aaJB/xobEv8VEQ7/FRIO/xUSDv8WEw/vFhMQwxUSDv8VEg7/FRMO/12NOf9Lbi7/FhQP/2ac
        Pv9EYir/Eg4M/1R+M/9YhDb/FxYP/2CTO/9Nci//EQwM/0JeKP9mnD//FxYQ/0tvL/9hkzv/FBEO/zhO
        I/9sp0L/GhwR/0RjKv9mmz7/GBcQ/xUSDv8VEg7/FRIO/xYTENUXFBGIFRIO/xUSDv8TEA3/QV0o/2+r
        Q/9WgjT/crBF/ys4HP8SDQz/NEgh/3OyRv9hkzv/c7JG/y8/Hv8SDg3/JjAY/26pQ/9ejzr/crBF/0Fe
        Kf8SDg3/ISgV/2ulQf9djTn/cK1E/0hpLP8UEA3/FRIO/xUSDv8VEg7/FhQRnRoWFDQWEw/hFRIO/xUR
        Dv8aGxH/RWQr/1iFNv82SyL/FhMO/xUSDv8WFQ//Nksi/05zMP80SCH/FhQP/xUSDv8VEg7/LTwd/050
        MP8+WSf/GRkQ/xURDv8UEQ7/Kzkc/092Mv9EYir/Gx0S/xURDv8VEg7/FRIO/xUSD+sYFRNFT0hUARgU
        EnQVEg75FRIO/xURDv8UEA3/FBEO/xQQDf8VEg7/FRIO/xUSDv8TEA3/Ew8N/xMQDf8VEg7/FRIO/xUS
        Dv8UEA3/Ew8N/xMPDf8VEQ7/FRIO/xUSDv8UEA7/ExAN/xMQDf8VEQ7/FRIO/xUSDv8VEg79FhQRiCEg
        IQUdGhgAHxwbCRcUEXkWEg/pFRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUS
        Dv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIO/xUSDv8VEg7/FRIP7xcT
        EYobFxcPGBUUAAAAAAAfGxoAIyAfBBkWFEAWExCgFhMQ3BUSD/gVEg//FREP/xURD/8VEQ//FREO/xUR
        Dv8VEQ7/FREO/xURDv8VEQ7/FREP/xURD/8VEQ7/FREO/xURDv8VEQ7/FREO/xUSD/8VEg/6FRMQ4RYT
        EKkYFRJKHx0aBx0aFwAAAAAAwAAAA4AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAAcAAAAM=
</value>
  </data>
</root>